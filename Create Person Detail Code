

/*****************************************************************************************************************************************

-Create ActivePerson rows according to NOI Active Client Criteria (below).
-Combine these records with PersonID and add AteMonthlyKey
-Deduplicate records so each Person is not shown as active more than once per month

Active Client Criteria:
	1.	a service start date is during specified date range. Note: the Data Bridge includes Application Assistance and Referrals as services.
	2.	a completion date (service or outcome) is during specified date range
	3.	a progressing status (service or outcome) is during specified date range
	4.	an assessment (pre-assessment or baseline assessment) is completed during specified date range
	5.	any demographic information was updated during specified date range (regardless of if the client is receiving an active service) 


*****************************************************************************************************************************************/


	--SELECT Active Client Criteria ##1-3

SELECT PP.PersonID, PPS.StartDate, ISNULL(PPS.ActualCompletionDate,GETDATE()) as EndDate, DateMonthlyKey
--26803728
INTO ##TempActive

		FROM PersonPlan PP

		LEFT OUTER JOIN
		PersonPlanService PPS
		ON PP.PersonPlanID = 
		PPS.PersonPlanID

		INNER JOIN DimDateMonthly DDM
		ON 
			(
			DDM.Year >= DATEPART(yy,PPS.StartDate)
			AND DDM.Month >= DATEPART(mm,PPS.StartDate)
			)

		  OR
			(
			DDM.Year <= DATEPART(yy,PPS.ActualCompletionDate)
			AND DDM.Month <= DATEPART(mm,PPS.ActualCompletionDate)
			)

		WHERE DDM.Year <= DATEPART(yy,GETDATE())
		AND DDM.Month <= DATEPART(mm,GETDATE()) 


UNION

		SELECT PP.PersonID, PPSO.StartDate, ISNULL(PPSO.ActualCompletionDate,GETDATE()) as EndDate, DateMonthlyKey

		FROM PersonPlan PP

		LEFT OUTER JOIN
		PersonPlanService PPS
		ON PP.PersonPlanID = 
		PPS.PersonPlanID

		LEFT OUTER JOIN PersonPlanServiceOutcomeJoin PPSOJ
		ON PPSOJ.PersonPlanServiceID =
		PPS.PersonPlanServiceID

		LEFT OUTER JOIN PersonPlanServiceOutcome PPSO
		ON PPSO.PersonPlanServiceOutcomeID =
		PPSOJ.PersonPlanServiceOutcomeID


		INNER JOIN DimDateMonthly DDM
		ON 
			(
			DDM.Year >= DATEPART(yy,PPSO.StartDate)
			AND DDM.Month >= DATEPART(mm,PPSO.StartDate)
			)

		  OR
			(
			DDM.Year <= DATEPART(yy,ISNULL(PPSO.ActualCompletionDate,GETDATE()))
			AND DDM.Month <= DATEPART(mm,ISNULL(PPSO.ActualCompletionDate,GETDATE()))
			)

		WHERE DDM.Year <= DATEPART(yy,GETDATE())
		AND DDM.Month <= DATEPART(mm,GETDATE()) 




	--SELECT Active Client Crieria ##4

UNION 

		SELECT PPA.PersonID, PPA.CreateDate as StartDate,  EndDate = PPA.CreateDate, DateMonthlyKey 
		FROM PersonPreAssessment PPA

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PPA.CreateDate)
			AND DDM.Month = DATEPART(mm,PPA.CreateDate)


UNION 

		SELECT PA.PersonID, PA.CreateDate as StartDate,  EndDate = PA.CreateDate, DateMonthlyKey 
		FROM PersonAssessment PA

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PA.CreateDate)
			AND DDM.Month = DATEPART(mm,PA.CreateDate)




	--SELECT Active Client Crieria ##5

UNION

		SELECT P.PersonID, P.CreateDate as StartDate,  EndDate = P.CreateDate, DateMonthlyKey 
		FROM Person P

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,P.CreateDate)
			AND DDM.Month = DATEPART(mm,P.CreateDate)


UNION

		SELECT P.PersonID, P.UpdateDate as StartDate,  EndDate = P.UpdateDate, DateMonthlyKey 
		FROM Person P

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,P.UpdateDate)
			AND DDM.Month = DATEPART(mm,P.UpdateDate)


UNION

		SELECT PH.PersonID, PH.CreateDate as StartDate,  EndDate = PH.CreateDate, DateMonthlyKey 
		FROM PersonHistory PH

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PH.CreateDate)
			AND DDM.Month = DATEPART(mm,PH.CreateDate)


UNION 

		SELECT PC.PersonID, PC.RecordedDate as StartDate,  EndDate = PC.RecordedDate, DateMonthlyKey 
		FROM PersonCharacteristic PC

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PC.RecordedDate)
			AND DDM.Month = DATEPART(mm,PC.RecordedDate)


UNION 

		SELECT PCH.PersonID, PCH.RecordedDate as StartDate,  EndDate = PCH.RecordedDate, DateMonthlyKey 
		FROM PersonCharacteristicHistory PCH

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PCH.RecordedDate)
			AND DDM.Month = DATEPART(mm,PCH.RecordedDate)


UNION 

		SELECT PCo.PersonID, PCo.UpdateDate as StartDate,  EndDate = PCo.UpdateDate, DateMonthlyKey 
		FROM PersonContact PCo

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PCo.UpdateDate)
			AND DDM.Month = DATEPART(mm,PCo.UpdateDate)


UNION 

		SELECT PE.PersonID, PE.UpdateDate as StartDate,  EndDate = PE.UpdateDate, DateMonthlyKey 
		FROM PersonEngagement PE

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PE.UpdateDate)
			AND DDM.Month = DATEPART(mm,PE.UpdateDate)


UNION 

		SELECT PHI.PersonID, PHI.RecordedDate as StartDate,  EndDate = PHI.RecordedDate, DateMonthlyKey 
		FROM PersonHealthInsurance PHI

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PHI.RecordedDate)
			AND DDM.Month = DATEPART(mm,PHI.RecordedDate)



UNION 

		SELECT PHIH.PersonID, PHIH.RecordedDate as StartDate,  EndDate = PHIH.RecordedDate, DateMonthlyKey 
		FROM PersonHealthInsuranceHistory PHIH

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PHIH.RecordedDate)
			AND DDM.Month = DATEPART(mm,PHIH.RecordedDate)



UNION 

		SELECT PHAJ.PersonID, PHA.CreateDate as StartDate,  EndDate = PHA.UpdateDate, DateMonthlyKey 

		FROM PersonHouseholdAddressJoin PHAJ

		INNER JOIN PersonHouseholdAddress PHA
		ON PHAJ.PersonHouseholdAddressID =
		PHA.PersonHouseholdAddressID

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PHA.CreateDate)
			AND DDM.Month = DATEPART(mm,PHA.CreateDate)


UNION 

		SELECT PHAJ.PersonID, PHA.UpdateDate as StartDate,  EndDate = PHA.UpdateDate, DateMonthlyKey 

		FROM PersonHouseholdAddressJoin PHAJ

		INNER JOIN PersonHouseholdAddress PHA
		ON PHAJ.PersonHouseholdAddressID =
		PHA.PersonHouseholdAddressID

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PHA.UpdateDate)
			AND DDM.Month = DATEPART(mm,PHA.UpdateDate)


UNION 

		SELECT PI.PersonID, PI.RecordedDate as StartDate,  EndDate = PI.RecordedDate, DateMonthlyKey 
		FROM PersonIncome PI

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PI.RecordedDate)
			AND DDM.Month = DATEPART(mm,PI.RecordedDate)


UNION 

		SELECT PIH.PersonID, PIH.RecordedDate as StartDate,  EndDate = PIH.RecordedDate, DateMonthlyKey 
		FROM PersonIncomeHistory PIH

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PIH.RecordedDate)
			AND DDM.Month = DATEPART(mm,PIH.RecordedDate)


UNION 

		SELECT PR.PersonID, PR.CreateDate as StartDate,  EndDate = PR.CreateDate, DateMonthlyKey 
		FROM PersonRace PR

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PR.CreateDate)
			AND DDM.Month = DATEPART(mm,PR.CreateDate)


UNION 

		SELECT PR.PersonID, PR.UpdateDate as StartDate,  EndDate = PR.UpdateDate, DateMonthlyKey 
		FROM PersonRace PR

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PR.UpdateDate)
			AND DDM.Month = DATEPART(mm,PR.UpdateDate)




	--SELECT unique Active Clients into temp table with PersonID, DateMonthlyKey and IsActive flag
SELECT DISTINCT PersonID, DateMonthlyKey, IsActive = 1
--10,697,590
INTO ##TempUniqueActivePerson
FROM ##TempActive








/*****************************************************************************************************************************************

-Create PersonHousehold temp table for joining Household data to ActivePerson rows.

*****************************************************************************************************************************************/

SELECT PersonID, ROW_NUMBER ( )   
    OVER (PARTITION BY PersonID ORDER BY RecordedDate) as RowNbr, HouseholdID, PersonHouseholdAddressID, RecordedDate
--293,591
INTO ##TEMP01
FROM PersonHouseholdAddressJoin
	WHERE AddressTypeID = 1


	--Impute start and end dates for each Person in different Households.
SELECT PREP1.PersonID, PREP1.HouseHoldID, PREP1.PersonHouseholdAddressID, PREP1.RecordedDate as StartDate, ISNULL(PREP2.RecordedDate, GETDATE()) as EndDate
--293,591
INTO ##TEMP02
FROM ##TEMP01 PREP1

LEFT OUTER JOIN 
##TEMP01 PREP2
ON PREP1.PersonID = PREP2.PersonID
	AND PREP1.RowNbr = (PREP2.RowNbr - 1)



		--Continued...
	SELECT ##TEMP02.*, DateMonthlyKey 
--7,694,581
	INTO ##TEMP03
	FROM ##TEMP02 

	INNER JOIN DimDateMonthly DDM
	ON 
		(DDM.StartDate  BETWEEN ##TEMP02.StartDate AND ##TEMP02.EndDate
		OR 
		DDM.EndDate  BETWEEN ##TEMP02.StartDate AND ##TEMP02.EndDate
	)


	--For any Persons that have more than one Household in a month, take the later dated Household for use.
SELECT PersonID, HouseholdID, PersonHouseholdAddressID, DateMonthlyKey, StartDate, EndDate, ROW_NUMBER ( )   
    OVER (PARTITION BY PersonID, DateMonthlyKey ORDER BY StartDate DESC) as RowNbr
--7,694,581
INTO ##TEMP04
FROM ##TEMP03

		--Continued...
	SELECT PersonID, HouseholdID, PersonHouseholdAddressID, DateMonthlyKey
	INTO ##TempPersonHousehold
	FROM ##TEMP04
		WHERE RowNbr = 1


	--Create temp table for join to ActivePerson
SELECT * 
--7,616,966 
INTO ##BB_PersonHousehold
FROM ##TempPersonHousehold







/*****************************************************************************************************************************************

-Create HouseholdHistory temp table for joining Household data to ActivePerson rows.

*****************************************************************************************************************************************/

SELECT HouseholdHistoryID, HouseholdID, FamilyTypeID, HousingTypeID, DwellingTypeID, HeatingTypeID, FPL, FPLLevelID, HouseholdSize, AnnualIncome, CreateDate, ROW_NUMBER ( )   
    OVER (PARTITION BY HouseholdID ORDER BY CreateDate) as RowNbr
--160,979 
INTO ##TEMP05
FROM HouseholdHistory


	--Impute start and end dates for each Household's characteristics.
SELECT PREP1.HouseholdHistoryID, PREP1.HouseholdID, PREP1.FamilyTypeID, PREP1.HousingTypeID, PREP1.DwellingTypeID, PREP1.HeatingTypeID, PREP1.FPL, PREP1.FPLLevelID, 
	PREP1.HouseholdSize, PREP1.AnnualIncome, PREP1.CreateDate as StartDate, ISNULL(PREP2.CreateDate, GETDATE()) as EndDate
--160,979 
INTO ##TEMP06
FROM ##TEMP05 PREP1

LEFT OUTER JOIN 
##TEMP05 PREP2
ON PREP1.HouseholdID = PREP2.HouseholdID
	AND PREP1.RowNbr = (PREP2.RowNbr - 1)
	ORDER BY HouseHoldID, StartDate


		--Continued...
	SELECT ##TEMP06.*, DateMonthlyKey 
--864,675 
	INTO ##TEMP07
	FROM ##TEMP06 

	INNER JOIN DimDateMonthly DDM
	ON 
		(DDM.StartDate  BETWEEN ##TEMP06.StartDate AND ##TEMP06.EndDate
		OR 
		DDM.EndDate  BETWEEN ##TEMP06.StartDate AND ##TEMP06.EndDate
	)


	--For any Persons that have more than one Household in a month, take the later dated Household for use.
SELECT HouseholdHistoryID, HouseholdID, FamilyTypeID, HousingTypeID, DwellingTypeID, HeatingTypeID, FPL, FPLLevelID, HouseholdSize, AnnualIncome, StartDate, EndDate, DateMonthlyKey,  ROW_NUMBER ( )   
    OVER (PARTITION BY HouseholdID, DateMonthlyKey ORDER BY StartDate DESC) as RowNbr
--864,675 
INTO ##TEMP08
FROM ##TEMP07

SELECT HouseholdHistoryID, HouseholdID, FamilyTypeID, HousingTypeID, DwellingTypeID, HeatingTypeID, FPL, FPLLevelID, HouseholdSize, AnnualIncome, DateMonthlyKey
--842,417 
INTO ##TempHouseholdHistory
FROM ##TEMP08
	WHERE RowNbr = 1


	--Create temp table for join to ActivePerson
SELECT * 
--842,417 
INTO ##BB_HouseholdHistory
FROM ##TempHouseholdHistory

SELECT COUNT(*) FROM ##TEMP08





/*****************************************************************************************************************************************

-Create PersonHistory temp table for joining PersonHistory data to ActivePerson rows.

*****************************************************************************************************************************************/

	--UNION Person and PersonHistory to get all Person Records in one table

SELECT 
		PersonHistoryID = NULL
      ,PersonID
      ,BirthDate
      ,PrimaryLanguageID
      ,SecondLanguageID
      ,EducationID
      ,MaritalStatusID
      ,EthnicityID
      ,GenderID
      ,FPL
      ,AnnualIncome
      ,DeceasedDate
      ,CreateDate
--492,032
INTO ##TempPersonUnion
  FROM Person

UNION
	SELECT
		PersonHistoryID
      ,PersonID
      ,BirthDate
      ,PrimaryLanguageID
      ,SecondLanguageID
      ,EducationID
      ,MaritalStatusID
      ,EthnicityID
      ,GenderID
      ,FPL
      ,AnnualIncome
      ,DeceasedDate
      ,CreateDate
  FROM PersonHistory



	--Select rows and impute create and end dates for rows.
SELECT
	PH1.PersonHistoryID, 
	PH1.PersonID, 
	PH1.CreateDate as StartDate, 
	PH1.BirthDate,
	PH1.PrimaryLanguageID,
	PH1.SecondLanguageID, 
	PH1.EducationID,
	PH1.MaritalStatusID,
	PH1.EthnicityID,
	PH1.GenderID,
	PH1.FPL,
	PH1.AnnualIncome,
	PH1.DeceasedDate,
	CASE WHEN PH2.EndDate IS NULL THEN GETDATE() ELSE PH2.EndDate END as EndDate

--492,032
INTO ##TEMP09
FROM 	
	(SELECT PersonHistoryID, PersonID, BirthDate, PrimaryLanguageID, SecondLanguageID, EducationID,	MaritalStatusID,
		EthnicityID, GenderID, FPL,	AnnualIncome, DeceasedDate,
	ROW_NUMBER ( )   
    OVER (PARTITION BY PersonID ORDER BY CreateDate) as RowNbr, CreateDate
	FROM ##TempPersonUnion) PH1

LEFT OUTER JOIN
	(SELECT PersonHistoryID, PersonID, ROW_NUMBER ( )   
    OVER (PARTITION BY PersonID ORDER BY CreateDate) as RowNbr, CreateDate as EndDate
	FROM ##TempPersonUnion) PH2

ON PH1.PersonID = PH2.PersonID
	AND (PH1.RowNbr + 1) = PH2.RowNbr



	--Join to DimDateMonthly for DateMonthlyKey.
	--Create and populate YearsOfAge and AgeBracketID fields.
SELECT 
	PersonHistoryID, 
	PersonID, 
	BirthDate, 
	PrimaryLanguageID, 
	SecondLanguageID, 
	EducationID,	
	MaritalStatusID, 
	EthnicityID, 
	GenderID, 
	FPL, 
	AnnualIncome, 
	DeceasedDate, 
	DateMonthlyKey, 
	DDM.EndDate as EndDate

--1,325,170
INTO ##TEMP10
FROM ##TEMP09 TTPH

INNER JOIN DimDateMonthly DDM
ON 
	(DDM.StartDate  BETWEEN TTPH.StartDate AND TTPH.EndDate
	OR 
	DDM.EndDate  BETWEEN TTPH.StartDate AND TTPH.EndDate
	)


	--Partition to enable selection of only latest record for each month.
	--Create and populate YearsOfAge and AgeBracketID fields.
SELECT 
	PersonHistoryID, 
	PersonID, 
	BirthDate, 
	YearsOfAge = (DATEDIFF(mm, Birthdate, EndDate) / 12), 
	AgeBracketID = CASE 
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 0 AND 5 
					THEN 1 
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 6 AND 11 
					THEN 2
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 12 AND 17 
					THEN 3
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 18 AND 23 
					THEN 4
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 24 AND 44 
					THEN 5
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 45 AND 54 
					THEN 6
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) BETWEEN 55 AND 69 
					THEN 7
					WHEN (DATEDIFF(mm, Birthdate, EndDate) / 12) >= 70 
					THEN 8
					ELSE NULL END, 
	PrimaryLanguageID, 
	SecondLanguageID, 
	EducationID,	
	MaritalStatusID, 
	EthnicityID, 
	GenderID, 
	FPL, 
	AnnualIncome, 
	DeceasedDate, 
	DateMonthlyKey, 
	ROW_NUMBER ( )   
    OVER (PARTITION BY PersonID, DateMonthlyKey ORDER BY PersonHistoryID DESC) as RowNbr
--1,325,170
INTO ##TEMP11	
FROM ##TEMP10

	--Select only latest record for each month.
SELECT PersonHistoryID, PersonID, BirthDate, YearsOfAge, AgeBracketID, PrimaryLanguageID, SecondLanguageID, EducationID,	
		MaritalStatusID, EthnicityID, GenderID, FPL, AnnualIncome, DeceasedDate, DateMonthlyKey

--1,297,168
INTO ##TEMP12	
FROM ##TEMP11
	WHERE RowNbr = 1


	--Create temp table for join to ActivePerson
SELECT * 
--1,297,168
INTO ##BB_PersonHistory
FROM ##TEMP12






/*****************************************************************************************************************************************

-Join to previously created temp table to add additional Person and Household data to ActivePerson rows.

*****************************************************************************************************************************************/

SELECT 
	ActivePersonKey = IDENTITY(int,1,1), TUAP.*, PH.HouseholdID, PH.PersonHouseholdAddressID, 
	HH.HouseholdHistoryID,
	PHi.Birthdate, PHi.YearsOfAge, PHi.AgeBracketID, PHi.PrimaryLanguageID, PHi.SecondLanguageID,
	PHi.EducationID, PHi.MaritalStatusID, PHi.EthnicityID, PHi.GenderID, PHi.FPL,
	PHi.AnnualIncome, PHi.DeceasedDate

--10,697,590
INTO ##TempUniqueActivePersonDetail
FROM ##TempUniqueActivePerson TUAP

LEFT OUTER JOIN ##BB_PersonHousehold PH
ON TUAP.PersonID = PH.PersonID
	AND TUAP.DateMonthlyKey = PH.DateMonthlyKey

LEFT OUTER JOIN ##BB_HouseholdHistory HH
ON PH.HouseholdID = HH.HouseholdID
	AND PH.DateMonthlyKey = HH.DateMonthlyKey

LEFT OUTER JOIN ##BB_PersonHistory PHi
ON TUAP.PersonID = PHi.PersonID
	AND TUAP.DateMonthlyKey = PHi.DateMonthlyKey


/*****************************************************************************************************************************************

-Create PersonCharacteristic temp table for joining PersonCharacteristic data to ActivePerson rows.

*****************************************************************************************************************************************/
	--Joins all current and history records together with the neccessary columns.
SELECT PCH.PersonCharacteristicID, PCH.PersonID, CharacteristicID, QualifierID, CreateDate, DateMonthlyKey 


--2,963,000
INTO ##JoinHistoryAndCurrent_1

		FROM PersonCharacteristicHistory PCH

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PCH.RecordedDate)
			AND DDM.Month = DATEPART(mm,PCH.RecordedDate)

UNION

		SELECT PC.PersonCharacteristicID, PC.PersonID, CharacteristicID, QualifierID, CreateDate, DateMonthlyKey 
		FROM PersonCharacteristic PC

		INNER JOIN DimDateMonthly DDM
		ON	DDM.Year = DATEPART(yy,PC.RecordedDate)
			AND DDM.Month = DATEPART(mm,PC.RecordedDate)



	--Identifies bad data from update glitch that previously assigned multiple statuses to each month.  
	--The first status for each month is used.
SELECT PersonCharacteristicID, PersonID, CharacteristicID, DateMonthlyKey, QualifierID, ROW_NUMBER ( )   
OVER (PARTITION BY PersonCharacteristicID, DateMonthlyKey ORDER BY CreateDate) as RowNbr, CreateDate as EndDate

--2,963,000
INTO ##TempIdentifyBadUpdates_2
FROM ##JoinHistoryAndCurrent_1



	--Removes bad data from update glitch as identified above.  
	--The first status for each month is used.
SELECT PersonCharacteristicID, PersonID, CharacteristicID, QualifierID, DateMonthlyKey

--2,652,852
INTO ##TempRemoveBadData_3
FROM ##TempIdentifyBadUpdates_2
WHERE RowNbr = 1


	--Prepare rows with Start and End Dates.
SELECT PREP1.PersonCharacteristicID, PREP1.CharacteristicID, PREP1.PersonID, PREP1.QualifierID as StartQualifierID, 
	CASE WHEN PREP2.QualifierID IS NULL THEN PREP1.QualifierID ELSE PREP2.QualifierID END as EndQualifierID, 
	PREP1.DateMonthlyKey as StartMonth, CASE WHEN PREP2.DateMonthlyKey IS NULL THEN DDM.DateMonthlyKey ELSE (PREP2.DateMonthlyKey - 1) END as EndMonth

--2,652,852
INTO ##TempStartEndDatePrep_4
FROM 	
	(
	SELECT PersonCharacteristicID, PersonID, CharacteristicID, DateMonthlyKey, QualifierID, ROW_NUMBER ( )   
    OVER (PARTITION BY PersonCharacteristicID ORDER BY DateMonthlyKey) as RowNbr
	FROM ##TempRemoveBadData_3
	) PREP1

LEFT OUTER JOIN
	(
	SELECT PersonCharacteristicID, PersonID, CharacteristicID, DateMonthlyKey, QualifierID, ROW_NUMBER ( )   
    OVER (PARTITION BY PersonCharacteristicID ORDER BY DateMonthlyKey) as RowNbr
	FROM ##TempRemoveBadData_3
	) PREP2

ON PREP1.PersonCharacteristicID = PREP2.PersonCharacteristicID
AND (PREP1.RowNbr + 1) = PREP2.RowNbr

LEFT OUTER JOIN DimDateMonthly DDM
ON DATEPART(mm, GETDATE()) = DDM.Month
AND DATEPART(yy, GETDATE()) = DDM.year



	--Final table with proper characteristics and qualifiers applied to all dates in running months.
SELECT PersonCharacteristicID, PersonID, CharacteristicID, StartQualifierID as QualifierID, DateMonthlyKey

--97,336,129
INTO ##TempPersonCharacteristic

FROM ##TempStartEndDatePrep_4

INNER JOIN DimDateMonthly DDM
ON 
	(
	DDM.DateMonthlyKey BETWEEN StartMonth AND EndMonth
	)


	--Create temp table for join to ActivePerson
SELECT * 

--97,336,129
INTO ##BB_PersonCharacteristic
FROM ##TempPersonCharacteristic







/*****************************************************************************************************************************************

-Join PersonCharacteristic data to ActivePerson

*****************************************************************************************************************************************/


	--Get and pivot characteristics
DECLARE @cols AS NVARCHAR(MAX);

	select @cols = STUFF((SELECT distinct',' +
							QUOTENAME(Characteristic)
							FROM ref_Characteristic
							FOR XML PATH(''), TYPE
							).value('.', 'NVARCHAR(MAX)') 
							, 1, 1, '');
	declare @q nvarchar(max)
	set @q = '
	SELECT * INTO ##PERCHAPIV FROM 
		(SELECT PersonCharacteristicID, PersonID, ref_Characteristic.Characteristic, QualifierID, DateMonthlyKey
		FROM ##BB_PersonCharacteristic 
			LEFT OUTER JOIN ref_Characteristic 
			ON ##BB_PersonCharacteristic.CharacteristicID = ref_Characteristic.CharacteristicID
		) PivCha
			PIVOT(MAX(QualifierID)
		FOR Characteristic IN(' + @cols + ')
		) PERCHA'
	exec (@q)	



	--Get each PersonID and DateMonthlyKey with all characteristics on one line each.
SELECT PersonID, DateMonthlyKey,
ISNULL(Max([DSS Jobs First-TFA]) ,0)as 'DSS Jobs First-TFA',
ISNULL(Max([DSS SNAP Recipient]) ,0)as 'DSS SNAP Recipient',
ISNULL(Max([WIC]) ,0)as 'WIC',
ISNULL(Max([DSS SAGA Cash]) ,0)as 'DSS SAGA Cash',
ISNULL(Max([Student]) ,0)as 'Student',
ISNULL(Max([Veteran]) ,0)as 'Veteran',
ISNULL(Max([Farmer]) ,0)as 'Farmer',
ISNULL(Max([Disabled]) ,0)as 'Disabled',
ISNULL(Max([DSS State Supplement]) ,0)as 'DSS State Supplement',
ISNULL(Max([Migrant Farm Worker]) ,0)as 'Migrant Farm Worker',
ISNULL(Max([Seasonal Farm Worker]) ,0)as 'Seasonal Farm Worker',
ISNULL(Max([DSS SAGA Medical]) ,0)as 'DSS SAGA Medical',
ISNULL(Max([DSS Husky]) ,0)as 'DSS Husky',
ISNULL(Max([Pregnant]) ,0)as 'Pregnant',
ISNULL(Max([Purchase and Prepare]) ,0)as 'Purchase and Prepare',
ISNULL(Max([Able to work]) ,0)as 'Able to work',
ISNULL(Max([On Strike]) ,0)as 'On Strike',
ISNULL(Max([Charter Oak]) ,0)as 'Charter Oak',
ISNULL(Max([Medicare]) ,0)as 'Medicare',
ISNULL(Max([Medicaid]) ,0)as 'Medicaid',
ISNULL(Max([Blind]) ,0)as 'Blind',
ISNULL(Max([Hearing Impaired]) ,0)as 'Hearing Impaired',
ISNULL(Max([DOC Health Insurance]) ,0)as 'DOC Health Insurance',
ISNULL(Max([Generic Health Insurance]) ,0)as 'Generic Health Insurance',
ISNULL(Max([Private Health Insurance]) ,0)as 'Private Health Insurance',
ISNULL(Max([No Health Insurance]) ,0)as 'No Health Insurance',
ISNULL(Max([HUSKY D]) ,0)as 'HUSKY D',
ISNULL(Max([Proficient Communicating in English]) ,0)as 'Proficient Communicating in English',
ISNULL(Max([Social Security]) ,0)as 'Social Security',
ISNULL(Max([SSI]) ,0)as 'SSI'
--8,177,377
INTO ##TEMP13
FROM ##PERCHAPIV 
GROUP BY PersonID, DateMonthlyKey



	--Join together with ActivePerson in a temp table
SELECT TUAPD.*,
[DSS Jobs First-TFA] as 'DSSJobsFirst-TFA',
[DSS SNAP Recipient] as 'DSSSNAPRecipient',
[WIC] as 'WIC',
[DSS SAGA Cash] as 'DSSSAGACash',
[Student] as 'Student',
[Veteran] as 'Veteran',
[Farmer] as 'Farmer',
[Disabled] as 'Disabled',
[DSS State Supplement] as 'DSSStateSupplement',
[Migrant Farm Worker] as 'MigrantFarmWorker',
[Seasonal Farm Worker] as 'SeasonalFarmWorker',
[DSS SAGA Medical] as 'DSSSAGAMedical',
[DSS Husky] as 'DSSHusky',
[Pregnant] as 'Pregnant',
[Purchase and Prepare] as 'PurchaseandPrepare',
[Able to work] as 'Abletowork',
[On Strike] as 'OnStrike',
[Charter Oak] as 'CharterOak',
[Medicare] as 'Medicare',
[Medicaid] as 'Medicaid',
[Blind] as 'Blind',
[Hearing Impaired] as 'HearingImpaired',
[DOC Health Insurance] as 'DOCHealthInsurance',
[Generic Health Insurance] as 'GenericHealthInsurance',
[Private Health Insurance] as 'PrivateHealthInsurance',
[No Health Insurance] as 'NoHealthInsurance',
[HUSKY D] as 'HUSKYD',
[Proficient Communicating in English] as 'ProficientCommunicatinginEnglish',
[Social Security] as 'SocialSecurity',
[SSI] as 'SSI'

--10,697,590
INTO ##TempFinalCharacteristics
FROM ##TempUniqueActivePersonDetail TUAPD
LEFT OUTER JOIN ##TEMP13
ON TUAPD.PersonID = ##TEMP13.PersonID
AND TUAPD.DateMonthlyKey = ##TEMP13.DateMonthlyKey






	--Create new ##TempUniqueActivePerson with characteristic values
SELECT * 
--10,697,590
INTO ##TempActivePersonDetail_1
FROM ##TempFinalCharacteristics





/*****************************************************************************************************************************************

ADD LOCATION DATA

*****************************************************************************************************************************************/

SELECT 
	TAPD1.*, 
	PHA.City, PHA.State, PHA.Zip, PHA.ZipExt, PHA.HouseDistrictID, PHA.SenateDistrictID
--10,697,590
INTO ##TEMPAddress
FROM ##TempActivePersonDetail_1 TAPD1

LEFT OUTER JOIN PersonHouseholdAddress PHA
ON TAPD1.PersonHouseholdAddressID = PHA.PersonHouseholdAddressID



SELECT *
--10,697,590
INTO ##TempActivePersonDetail_2
FROM ##TEMPAddress




/*****************************************************************************************************************************************
Add Household details
*****************************************************************************************************************************************/


SELECT 
	TAPD2.*,
	HH.FamilyTypeID, HH.HousingTypeID, HH.DwellingTypeID, HH.HeatingTypeID, HH.FPL as HouseholdFPL,
	HH.FPLLevelID as HouseholdFPLLevelID, HH.HouseholdSize, HH.AnnualIncome as HouseholdAnnualIncome
--10,697,590
INTO ##TEMPHousehold
FROM ##TempActivePersonDetail_2  TAPD2

LEFT OUTER JOIN HouseHoldHistory HH
ON TAPD2.HouseholdHistoryID = 
HH.HouseholdHistoryID

SELECT COUNT(*) FROM ##TempActivePersonDetail_3
SELECT *
--10,697,590
INTO ##TempActivePersonDetail_3
FROM ##TEMPHousehold



/*****************************************************************************************************************************************
Create data sets
*****************************************************************************************************************************************/


/* Creates dataset with all 10 million plus records with simple NULLs in many variables that go back past history dates.
SELECT * 
INTO BBABActivePersonDetail_NULLs
FROM ##TempActivePersonDetail_3
*/


	--Created 9.14.17
/* Creates dataset with only March 2017 through May 2017.
SELECT * 
INTO BBAB_ActivePersonDetail
FROM BBABActivePersonDetail_NULLs
WHERE DateMonthlyKey BETWEEN 111 and 114
*/











/*********************************************************************************************************************************
Created:		9.14.17
Last Updated:	

Fix Address data.

*********************************************************************************************************************************/



	--Obviously misspelled Barkhamsteds
UPDATE BBAB_ActivePersonDetail 
SET City = 'Barkhamsted'
WHERE City = 'Barhamsted'
OR City LIKE 'Barkhamstad'
OR City LIKE 'BARKHAMSTEAD'
OR City LIKE 'BARKHAMSTED'
OR City LIKE 'Barkhamsted,'


	--Obviously misspelled Barkhamsteds
UPDATE BBAB_ActivePersonDetail 
SET City = 'Barkhamsted'
WHERE City = 'Barhamsted'
OR City LIKE 'Barkhamstad'

	--Set to lower case
UPDATE BBAB_ActivePersonDetail 
SET City = 'Beacon Falls'
WHERE City = 'BEACON FALLLS'


	--Obviously misspelled Bethels
UPDATE BBAB_ActivePersonDetail 
SET City = 'Bethel'
WHERE City = 'Bethal'
OR City LIKE 'BETHEL'

	--Obviously misspelled Berlins
UPDATE BBAB_ActivePersonDetail 
SET City = 'Berlin'
WHERE City = 'BERLIN CT'
OR City = 'BERLIN'

	--Obviously misspelled Bethlehems
UPDATE BBAB_ActivePersonDetail 
SET City = 'Bethlehem'
WHERE City = 'BETHLEHEM'
OR City = 'Bethlehem,'
OR City = 'Bethleham'

	--Obviously misspelled Bristols
UPDATE BBAB_ActivePersonDetail 
SET City = 'Bristol'
WHERE City = 'BRISTOL'
OR City = 'BRITOL'


	--Obviously misspelled Bethany
UPDATE BBAB_ActivePersonDetail 
SET City = 'Bethany'
WHERE City = 'BETHANY'
OR City = 'Bethany,'


	--Obviously misspelled Bridgeport
UPDATE BBAB_ActivePersonDetail 
SET City = 'Bridgeport'
WHERE City = 'BRIDGEPORT STREET'
OR City = 'BRIDGEPORT'


	--Obviously misspelled Cornwall
UPDATE BBAB_ActivePersonDetail 
SET City = 'Cornwall'
WHERE City = 'Ccornwall'
OR City = 'Cornwall Bridge'


	--Obviously misspelled Cheshire
UPDATE BBAB_ActivePersonDetail 
SET City = 'Cheshire'
WHERE City = 'CHESHIRE'
OR City = 'Cheshire,'
OR City = 'CHESIRE'


	--Obviously misspelled Danbury
UPDATE BBAB_ActivePersonDetail 
SET City = 'Danbury'
WHERE City = 'DANBUARY'
OR City = 'DANBURY'
OR City = 'Danbury,'

	--Obviously misspelled East Hartford
UPDATE BBAB_ActivePersonDetail 
SET City = 'East Hartford'
WHERE City = 'East Hratford'


	--Obviously misspelled Falls Village
UPDATE BBAB_ActivePersonDetail 
SET City = 'Falls Village'
WHERE City = 'Falls Villiage'


	--Obviously misspelled Harwinton
UPDATE BBAB_ActivePersonDetail 
SET City = 'Harwinton'
WHERE City = 'Harwington'
OR City = 'HARWINTON'
OR City = 'HARWINTOW'
OR City = 'HSRWINTON'
OR City = 'HAWINGTON'

	--Obviously misspelled Harwinton
UPDATE BBAB_ActivePersonDetail 
SET City = 'Harwinton'
WHERE City = 'Harwington'
OR City = 'HARWINTON'
OR City = 'HARWINTOW'
OR City = 'HSRWINTON'
OR City = 'HAWINGTON'

	--Obviously misspelled Kensington
UPDATE BBAB_ActivePersonDetail 
SET City = 'Kensington'
WHERE City = 'KENINGSTON'
OR City = 'KENSINGTON'
OR City = 'KENSINTON'



	--Obviously misspelled Meriden
UPDATE BBAB_ActivePersonDetail 
SET City = 'Meriden' 
WHERE City LIKE 'MEERIDEN'
OR City LIKE 'Meiden'
OR City LIKE 'MEIRDEN'
OR City LIKE 'Merdein'
OR City LIKE 'Merden'
OR City LIKE 'Merdien'
OR City LIKE 'Meridan'
OR City LIKE 'Meride'
OR City LIKE 'MERIDEEN'
OR City LIKE 'MERIDEN'
OR City LIKE 'MERIDEN CT'
OR City LIKE 'Meriden,'
OR City LIKE 'Meridenm'
OR City LIKE 'Merident'
OR City LIKE 'MERIDN'
OR City LIKE 'Meridne'
OR City LIKE 'Merien'
OR City LIKE 'MERISDEN'
OR City LIKE 'MERRIDEN'
OR City LIKE 'Metriden'
OR City LIKE 'Mreiden'
OR City LIKE 'mriden'
OR City LIKE 'S MERIDEN'
OR City LIKE 'S. MERIDEN'
OR City LIKE 'S.MERIDEN'
OR City LIKE 'S.Neriden'
OR City LIKE 'SOUTH MERIDEN'
OR City LIKE 'SO MERIDEN'
OR City LIKE 'SO. MERIDEN'
OR City LIKE 'SO. Neriden'

	--Obviously misspelled Naugatuck
UPDATE BBAB_ActivePersonDetail 
SET City = 'Naugatuck' 
WHERE City LIKE 'Nagatuck'
OR City LIKE 'NAGUATUCK'
OR City LIKE 'NAUAGTUCK'
OR City LIKE 'NAUGATACK'
OR City LIKE 'NAUGATAUCK'
OR City LIKE 'NAUGATUCK'
OR City LIKE 'NAUGAUCK'
OR City LIKE 'Naugautack'
OR City LIKE 'Naugtuck'
OR City LIKE 'Naugutuck'
OR City LIKE 'Nauhatuck'
OR City LIKE 'Nautatuck'


	--Obviously misspelled New Britain
UPDATE BBAB_ActivePersonDetail 
SET City = 'New Britain' 
WHERE City LIKE 'NEW BRITAIN'
OR City LIKE 'New Britian'


	--Obviously misspelled New Hartford
UPDATE BBAB_ActivePersonDetail 
SET City = 'New Hartford' 
WHERE City LIKE 'New Harford'
OR City LIKE 'NEW HARTFORD'


	--Obviously misspelled Preston
UPDATE BBAB_ActivePersonDetail 
SET City = 'Preston' 
WHERE City LIKE 'NEW PRESTON'
OR City LIKE 'NEW PRESTON, MARBLE DALE'

	--Obviously misspelled Plainville
UPDATE BBAB_ActivePersonDetail 
SET City = 'Plainville' 
WHERE City LIKE 'PLAINTVILLE'
OR City LIKE 'PLAINVILLE'
OR City LIKE 'PLANTSVILLE'

	--Obviously misspelled Prospect
UPDATE BBAB_ActivePersonDetail 
SET City = 'Prospect' 
WHERE City LIKE 'PROPECT'
OR City LIKE 'PROSPECT'


	--Obviously misspelled Ridgefield
UPDATE BBAB_ActivePersonDetail 
SET City = 'Ridgefield' 
WHERE City LIKE 'RIDGEFIELD'
OR City LIKE 'Ridgefield,'

	--Obviously misspelled Southington
UPDATE BBAB_ActivePersonDetail 
SET City = 'Southington' 
WHERE City LIKE 'SAUTHINGTON'
OR City LIKE 'SOUTHINGTON'
OR City LIKE 'Soutington'
OR City LIKE 'Southbury,'
OR City LIKE 'Soutrhbury'

	--Obviously misspelled Southbury
UPDATE BBAB_ActivePersonDetail 
SET City = 'Southbury' 
WHERE City LIKE 'SOUTHBUIRY'
OR City LIKE 'Southbury'
OR City LIKE 'Soouthbury'
OR City LIKE 'Southbury,'
OR City LIKE 'Soutrhbury'


	--Obviously misspelled Thomaston
UPDATE BBAB_ActivePersonDetail 
SET City = 'Thomaston' 
WHERE City LIKE 'Thoamston'
OR City LIKE 'Thomaston'



	--Obviously misspelled Torrington
UPDATE BBAB_ActivePersonDetail 
SET City = 'Torrington' 
WHERE City LIKE 'torerington'
OR City LIKE 'torington'
OR City LIKE 'TORR'
OR City LIKE 'Torring,'
OR City LIKE 'TORRINGTON'
OR City LIKE 'torrington #2N'
OR City LIKE 'torringtpn'
OR City LIKE 'TORRINGTTON,'
OR City LIKE 'torringtpn'
OR City LIKE 'TORRINGTTON'
OR City LIKE 'TORRINTON'
OR City LIKE 'TORRNGTON'
OR City LIKE 'Torrrington'
OR City LIKE 'Tottington,'
OR City LIKE 'Tottington'

	--Obviously misspelled Wallingford
UPDATE BBAB_ActivePersonDetail 
SET City = 'Wallingford' 
WHERE City LIKE 'Walingford'
OR City LIKE 'WALLIGFORD'
OR City LIKE 'WALLINGDORD'
OR City LIKE 'WALLINGFOR'
OR City LIKE 'WALLINGFORD'
OR City LIKE 'WALLINGFPRD'
OR City LIKE 'Wallingfrod'
OR City LIKE 'TORRINGTTON,'
OR City LIKE 'torringtpn'


	--Obviously misspelled Waterburys
UPDATE BBAB_ActivePersonDetail 
SET City = 'Waterbury' 
WHERE City LIKE '.WATERBURY'
OR City LIKE 'WTBY'
OR City LIKE 'wtby'
OR City LIKE 'Waerbury'
OR City LIKE 'WAETRBURY'
OR City LIKE 'WARTERBURY'
OR City LIKE 'wataerbury'
OR City LIKE 'WATEBRURY'
OR City LIKE 'WATEBRUY'
OR City LIKE 'Watebury'
OR City LIKE 'watebury'
OR City LIKE 'WATEBURY'
OR City LIKE 'WATERB URY'
OR City LIKE 'Waterbiry'
OR City LIKE 'WATERBRUY'
OR City LIKE 'Waterbruy'
OR City LIKE 'WATERBUIRY'
OR City LIKE 'waterbur'
OR City LIKE 'Waterbur;y'
OR City LIKE 'Waterburt'
OR City LIKE 'WATERBURU'
OR City LIKE 'Waterburuy'
OR City LIKE 'Waterbury'
OR City LIKE 'WATERBURY'
OR City LIKE 'Waterbury'
OR City LIKE 'WATERBURY'
OR City LIKE 'waterbury'
OR City LIKE 'WATERBURY CT'
OR City LIKE 'Waterbury,'
OR City LIKE 'Waterbury, CT'
OR City LIKE 'Waterbury;'
OR City LIKE 'Waterbury06704'
OR City LIKE 'Waterbuty'
OR City LIKE 'WATERBUY'
OR City LIKE 'Waterbuy'
OR City LIKE 'WATERRBURY'
OR City LIKE 'WATERURY'
OR City LIKE 'Waterury'
OR City LIKE 'WATERURY'
OR City LIKE 'WATERVUY'
OR City LIKE 'WATRBURY'
OR City LIKE 'WATRBURY'
OR City LIKE 'WATYERBURY'
OR City LIKE 'Wayerbury'
OR City LIKE 'jWaterbury'
OR City LIKE 'W ATERBURY'
OR City LIKE 'Waternury'
OR City LIKE 'WTBY,'

	--Obviously misspelled Watertown
UPDATE BBAB_ActivePersonDetail 
SET City = 'Watertown' 
WHERE City LIKE 'Waterotwn'
OR City LIKE 'Watertoown'
OR City LIKE 'WATERTOWN'
OR City LIKE 'Watertown,'
OR City LIKE 'Waertown'


	--Obviously misspelled Winchester
UPDATE BBAB_ActivePersonDetail 
SET City = 'Winchester' 
WHERE City LIKE 'WINCHESTER'
OR City LIKE 'Winchester Center'
OR City LIKE 'Winchester Ctr.'


	--Obviously misspelled Winsted
UPDATE BBAB_ActivePersonDetail 
SET City = 'Winsted' 
WHERE City LIKE 'Winasted'
OR City LIKE 'WINTSTED'
OR City LIKE 'Wisted'

	--Obviously misspelled Woodbury
UPDATE BBAB_ActivePersonDetail 
SET City = 'Woodbury' 
WHERE City LIKE 'WOODBURY'
OR City LIKE 'Woodbury, CT 06798'

	--Obviously misspelled Yalesville
UPDATE BBAB_ActivePersonDetail 
SET City = 'Yalesville' 
WHERE City LIKE 'Yalesville'
OR City LIKE 'YALLESVILLE'

	--Obviously misspelled Bantam
UPDATE BBAB_ActivePersonDetail 
SET City = 'Bantam' 
WHERE City LIKE 'BAMTAN'
OR City LIKE 'BANTAM'
OR City LIKE 'Bantan'

	--Obviously misspelled Middletown
UPDATE BBAB_ActivePersonDetail 
SET City = 'Middletown' 
WHERE City LIKE 'MIDDLETOWN'
OR City LIKE 'MIDLETOWN'

	--Obviously misspelled North Canaan
UPDATE BBAB_ActivePersonDetail 
SET City = 'North Canaan' 
WHERE City LIKE 'North Caanan'
OR City LIKE 'NORTH CANAAN'

	--Obviously misspelled Oakvile
UPDATE BBAB_ActivePersonDetail 
SET City = 'Oakville' 
WHERE City LIKE 'OAKVILLE'

	--Obviously misspelled Portland
UPDATE BBAB_ActivePersonDetail 
SET City = 'Portland' 
WHERE City LIKE 'PORTLAND'
OR City LIKE 'Potland'

	--Obviously misspelled Portland
UPDATE BBAB_ActivePersonDetail 
SET City = 'Sandy Hook' 
WHERE City LIKE 'SandyHook'


	--Miscellaneous updates
UPDATE BBAB_ActivePersonDetail Set City = NULL, Zip = '06762' WHERE City = '06762' AND Zip = '99999'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Brewster'
UPDATE BBAB_ActivePersonDetail Set State = 'NY', Zip = '06234' WHERE City = 'Brooklyn'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Meriden'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Newtown'
UPDATE BBAB_ActivePersonDetail Set State = 'PA' WHERE City = 'PHILADELPHIA' 
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Southbury'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Soutington'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Thomaston'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Torrington'
UPDATE BBAB_ActivePersonDetail Set State = 'CT' WHERE City = 'Waterbury'

	--Miscellaneous updates from spreadsheet
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06762 ' WHERE City = '06762 ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06456 ' WHERE City = '2032351505 ' AND Zip = '06456 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06710 ' WHERE City = '2nd Floor ' AND Zip = '06710 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06712 ' WHERE City = '5012 ' AND Zip = '06712 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06488 ' WHERE City = '5018 ' AND Zip = '06488 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06759 ' WHERE City = '53 LITCHFIELD ' AND Zip = '06759 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06450 ' WHERE City = 'Apt 2 ' AND Zip = '06450 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06450 ' WHERE City = 'APT 307 ' AND Zip = '06450 '
UPDATE BBAB_ActivePersonDetail Set City = 'Barkhamsted ', Zip = '06063 ' WHERE City = 'Barkhamsted ' AND Zip = '96063 '
UPDATE BBAB_ActivePersonDetail Set City = 'Bethany ', Zip = '06524 ' WHERE City = 'Bethany ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Bristol ', Zip = '06710 ' WHERE City = 'Bristol ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Wallingford ', Zip = '06492 ' WHERE City = 'Cheshire ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06098 ' WHERE City = 'CT ' AND Zip = '06098 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06451 ' WHERE City = 'CT ' AND Zip = '06451 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '06450 ' WHERE City = 'ct ' AND Zip = '06450 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '999999 ' WHERE City = 'Culver City ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Danbury ', Zip = '06810 ' WHERE City = 'Danbury ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Meriden ', Zip = '04651 ' WHERE City = 'Meriden ' AND Zip = '60451 '
UPDATE BBAB_ActivePersonDetail Set City = 'Meriden ', Zip = '04651 ' WHERE City = 'Meriden ' AND Zip = '00451 '
UPDATE BBAB_ActivePersonDetail Set City = 'Meriden ', Zip = '06450 ' WHERE City = 'Meriden ' AND Zip = '06450 '
UPDATE BBAB_ActivePersonDetail Set City = 'Meriden ', Zip = '06450 ' WHERE City = 'Meriden ' AND Zip = '00645 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '99999 ' WHERE City = 'N/A ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Naugatuck ', Zip = '06670 ' WHERE City = 'Naugatuck ' AND Zip = '01677 '
UPDATE BBAB_ActivePersonDetail Set City = 'Meriden ', Zip = '06450 ' WHERE City = 'Neriden ' AND Zip = '06450 '
UPDATE BBAB_ActivePersonDetail Set City = 'New Haven ', Zip = '06511 ' WHERE City = 'New Haven ' AND Zip = '10651 '
UPDATE BBAB_ActivePersonDetail Set City = 'New Haven ', Zip = '06511 ' WHERE City = 'NEW HAVEN ' AND Zip = '06515 '
UPDATE BBAB_ActivePersonDetail Set City = 'Newtown ', Zip = '06470 ' WHERE City = 'Newtown ' AND Zip = '06740 '
UPDATE BBAB_ActivePersonDetail Set City = 'Oakville ', Zip = '06779 ' WHERE City = 'Oakville ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Oxford ', Zip = '06478 ' WHERE City = 'Oxford ' AND Zip = '06874 '
UPDATE BBAB_ActivePersonDetail Set City = 'Oxford ', Zip = '06478 ' WHERE City = 'Oxford ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Sharon ', Zip = '06796 ' WHERE City = 'Sharon ' AND Zip = '06790 '
UPDATE BBAB_ActivePersonDetail Set City = 'Shelton ', Zip = '06484 ' WHERE City = 'Shelton ' AND Zip = '06404 '
UPDATE BBAB_ActivePersonDetail Set City = 'SOUTH WINDSOR ', Zip = '06074 ' WHERE City = 'SOUTH WINDSOR ' AND Zip = '06704 '
UPDATE BBAB_ActivePersonDetail Set City = 'Southbury ', Zip = '06498 ' WHERE City = 'Southbury ' AND Zip = '06798 '
UPDATE BBAB_ActivePersonDetail Set City = 'Southbury ', Zip = '06488 ' WHERE City = 'Southbury ' AND Zip = '00648 '
UPDATE BBAB_ActivePersonDetail Set City = 'Southbury ', Zip = '06488 ' WHERE City = 'Southbury ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torring ' AND Zip = '06790 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torrington ' AND Zip = '06709 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torrington ' AND Zip = '09790 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torrington ' AND Zip = '07679 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torrington ' AND Zip = '06098 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torrington ' AND Zip = '06490 '
UPDATE BBAB_ActivePersonDetail Set City = 'Torrington ', Zip = '06790 ' WHERE City = 'Torrington ' AND Zip = '06779 '
UPDATE BBAB_ActivePersonDetail Set City = 'Unknown ', Zip = '99999 ' WHERE City = 'Unknown ' AND Zip = '06000 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '06790 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '09706 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '06779 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '00670 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06705 ' WHERE City = 'Waterbury ' AND Zip = '10705 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06708 ' WHERE City = 'Waterbury ' AND Zip = '06078 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06708 ' WHERE City = 'Waterbury ' AND Zip = '07708 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06720 ' WHERE City = 'Waterbury ' AND Zip = '02670 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '20000 '
UPDATE BBAB_ActivePersonDetail Set City = 'Waterbury ', Zip = '06709 ' WHERE City = 'Waterbury ' AND Zip = '00000 '
UPDATE BBAB_ActivePersonDetail Set City = 'Winsted ', Zip = '06098 ' WHERE City = 'Winsted ' AND Zip = '06790 '
UPDATE BBAB_ActivePersonDetail Set City = 'Winsted ', Zip = '06098 ' WHERE City = 'Winsted ' AND Zip = '07098 '
UPDATE BBAB_ActivePersonDetail Set City = 'Wolcott ', Zip = '06716 ' WHERE City = 'Wolcott ' AND Zip = '99999 '
UPDATE BBAB_ActivePersonDetail Set City = 'Woodbury ', Zip = '06798 ' WHERE City = 'Woodbury ' AND Zip = '99999 '





